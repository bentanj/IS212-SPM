services:

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: backend_proxy
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - tasks
      - authentication
      - reports
      - users
      - taskattachments
    restart: unless-stopped

  # Tasks Service
  tasks:
    build:
      context: ./Tasks
      dockerfile: Dockerfile
    container_name: tasks_app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO}
      - ENV=${ENV}
    expose:
      - "8001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-f", "import requests; requests.get('http://127.0.0.1:8001/api/tasks/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Authentication Service
  authentication:
    build:
      context: ./Authentication
      dockerfile: Dockerfile
    container_name: authentication_app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO}
      - ENV=${ENV}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
    expose:
      - "8002"
    restart: unless-stopped

  # Reports Service
  reports:
    build:
      context: ./Reports
      dockerfile: Dockerfile
    container_name: reports_app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO}
      - ENV=${ENV}
    expose:
      - "8010"
    # depends_on:
    #   tasks:
    #     condition: service_healthy
    restart: unless-stopped
  
  # Users
  users:
    build:
      context: ./Users
      dockerfile: Dockerfile
    container_name: users_app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO}
      - ENV=${ENV}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - SECRET_KEY=${SECRET_KEY}
    expose:
      - "8003"
    restart: unless-stopped

  # TaskAttachments
  taskattachments:
    build:
      context: ./TaskAttachments
      dockerfile: Dockerfile
    container_name: taskattachments_app
    environment:
      - ENV=${ENV}
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - STORAGE_BUCKET=${STORAGE_BUCKET}
      - MAX_FILE_SIZE_BYTES=${MAX_FILE_SIZE_BYTES}
      - SECRET_KEY=${SECRET_KEY}
    expose:
      - "8005"
    restart: unless-stopped
